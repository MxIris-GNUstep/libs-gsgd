# configure.in for GSGD library
# Process this file with autoconf to produce a configure script.
#
# Copyright (C) 2001 Free Software Foundation, Inc.
#
# Author:  Adam Fedor <fedor@gnu.org>
#
# This file is part of GSGD
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Library General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
# 
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Library General Public License for more details.
#
# You should have received a copy of the GNU Library General Public
# License along with this library; see the file COPYING.LIB.
# If not, write to the Free Software Foundation,
# 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
#

AC_INIT(GNUmakefile)

#--------------------------------------------------------------------
# Find the compiler
#--------------------------------------------------------------------
AC_PROG_CC
AC_PROG_CPP

#--------------------------------------------------------------------
# Determine the host, build, and target systems
#--------------------------------------------------------------------
AC_CANONICAL_SYSTEM

#--------------------------------------------------------------------
# Find for gd
#--------------------------------------------------------------------
ADDITIONAL_LIBS=
ADDITIONAL_CFLAGS=
ADDITIONAL_LFLAGS=

AC_ARG_WITH(gd_library, 
           [  --with-gd-library=DIR gd library file are in DIR], ,
           with_gd_library=)
AC_ARG_WITH(gd_include,  
	[  --with-gd-include=DIR GD include files are in DIR], ,
        with_gd_include=)

if test "$with_gd_include" = ""; then
  case "$target_os" in
    freebsd*)	with_gd_include="/usr/local/include/gd"
		with_gd_library="/usr/local/lib";;
  esac
fi

if test -n "$with_gd_library"; then
  with_gd_library="-L$with_gd_library"
fi
if test -n "$with_gd_include"; then
  with_gd_include="-I$with_gd_include"
fi

AC_DEFUN(AC_CHECK_GDLIB,
[gd_check_lib_save_header=${CPPFLAGS}
CPPFLAGS="$1 $2 ${CPPFLAGS}"

AC_CHECK_LIB(gd, main,
      gd_ok=yes,
      gd_ok=no)
if test "$gd_ok" = yes; then
  AC_MSG_CHECKING([for gd.h])
  AC_TRY_CPP([#include <stdio.h>
	      #undef HAVE_STDLIB_H
              #include <gd.h>],
 	      gd_ok=yes,
	      gd_ok=no)
  AC_MSG_RESULT($gd_ok)

  if test "$gd_ok" = yes; then
    ADDITIONAL_LFLAGS="$1"
    ADDITIONAL_CFLAGS="$2"
  fi
fi
CPPFLAGS="${gd_check_lib_save_header}"])

AC_CHECK_GDLIB(${with_gd_library}, ${with_gd_include})

AC_SUBST(ADDITIONAL_LFLAGS)
AC_SUBST(ADDITIONAL_CFLAGS)

AC_OUTPUT(config.make)





